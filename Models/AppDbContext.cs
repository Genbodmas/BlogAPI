using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Design;

namespace BlogApi.Models
{
    public class AppDbContext : DbContext
    {
        public DbSet<User> Users { get; set; }
        public DbSet<Post> Posts { get; set; }
        public DbSet<Blog> Blogs { get; set; }

        //public AppDbContext() { }
        public AppDbContext(DbContextOptions<AppDbContext> options) : base(options)
        {
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            // Configure User table
            modelBuilder.Entity<User>(user =>
            {
                user.ToTable("User"); //  table name
                user.HasKey(u => u.ID); //  PK
                user.Property(u => u.ID).ValueGeneratedOnAdd(); // Autogenerated ID
                user.Property(u => u.Username).IsRequired();
                user.Property(u => u.Email).IsRequired();
                user.Property(u => u.Phone).IsRequired();
                user.Property(u => u.FirstName).IsRequired();
                user.Property(u => u.LastName).IsRequired();
            });

            // Configure Post table
            modelBuilder.Entity<Post>(post =>
            {
                post.ToTable("Post"); //  table name
                post.HasKey(p => p.ID); // PK
                post.Property(p => p.ID).ValueGeneratedOnAdd(); // Autogenerated ID
                post.Property(p => p.BlogID).IsRequired();
                post.Property(p => p.Date).IsRequired();
                post.Property(p => p.Title).IsRequired();
                post.Property(p => p.Content).IsRequired();
                post.Property(p => p.UserName).IsRequired();


            });

            // Configure Blog table
            modelBuilder.Entity<Blog>(blog =>
            {
                blog.ToTable("Blog"); //  table name
                blog.HasKey(p => p.ID); // Pk
                blog.Property(p => p.ID).ValueGeneratedOnAdd(); // Autogenerated ID
                blog.Property(p => p.Desc).IsRequired();
                blog.Property(p => p.Name).IsRequired();
                blog.Property(p => p.UserName).IsRequired();


            });
        }
    }

    
}
